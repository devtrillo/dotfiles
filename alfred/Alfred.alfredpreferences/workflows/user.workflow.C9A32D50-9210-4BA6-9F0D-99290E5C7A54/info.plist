<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string></string>
	<key>category</key>
	<string>Productivity</string>
	<key>connections</key>
	<dict>
		<key>8A4E0C7A-B3E2-4872-B51D-26A1CF571253</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F631CD8A-BA67-46A6-ACC0-9C5AAF01C3D4</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Devtrillo</string>
	<key>description</key>
	<string>Open CM2 tmux session</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>CM2-workflow</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>triggerid</key>
				<string>t-cm2</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>8A4E0C7A-B3E2-4872-B51D-26A1CF571253</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>cm2</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.terminalcommand</string>
			<key>uid</key>
			<string>F631CD8A-BA67-46A6-ACC0-9C5AAF01C3D4</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Easily open remote SSH sessions using your default ssh: protocol handler (the default being Terminal.app) with full anchored hostname autocompletion against the contents of ~/.ssh/config (e.g. Host aliases with Hostname override), ~/.ssh/known_hosts (historical connections), /etc/hosts and, optionally, Bonjour (Back to My Mac and local hosts advertising their ability to accept SSH connections).

Notes:
1. In order to enable Bonjour discovery, you must install the pybonjour module: `sudo /usr/bin/easy_install pybonjour`. Disable entirely by setting the "alfredssh_bonjour" environment variable to 0.
2. Disable any input by changing the value of the associated Workflow Environment Variable from 1 to 0.
3. Add additional files to be parsed and cached (hosts separated by whitespace, comment lines prefixed by #) by adding space-separated cache_suffix=file_path pairs to the alfredssh_extra_files Workflow Environment Variable. Neither "cache_suffix" nor "file_path" can contain any spaces, but ~ prefix is allowed on file_path. E.g.: "hosts.ed25519=~/.ssh/hosts.ed25519"</string>
	<key>uidata</key>
	<dict>
		<key>8A4E0C7A-B3E2-4872-B51D-26A1CF571253</key>
		<dict>
			<key>xpos</key>
			<integer>115</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>F631CD8A-BA67-46A6-ACC0-9C5AAF01C3D4</key>
		<dict>
			<key>xpos</key>
			<integer>350</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
	</dict>
	<key>variables</key>
	<dict>
		<key>alfredssh_bonjour</key>
		<string>1</string>
		<key>alfredssh_extra_files</key>
		<string></string>
		<key>alfredssh_hosts</key>
		<string>1</string>
		<key>alfredssh_known_hosts</key>
		<string>1</string>
		<key>alfredssh_max_results</key>
		<string>36</string>
		<key>alfredssh_ssh_config</key>
		<string>1</string>
	</dict>
	<key>version</key>
	<string>2.3</string>
	<key>webaddress</key>
	<string></string>
</dict>
</plist>
